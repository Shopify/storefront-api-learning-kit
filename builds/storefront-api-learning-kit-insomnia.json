{"_type":"export","__export_format":4,"__export_date":"2023-01-05T21:13:30.294Z","resources":[{"_id":"wrk_1","parentId":null,"modified":1622496642376,"created":1622496642376,"name":"Storefront API Learning Kit","description":"","scope":"collection","_type":"workspace"},{"_id":"env_1","parentId":"wrk_1","modified":1622728350592,"created":1622496642560,"name":"Base Environment","data":{"base_url":"shop.myshopify.com","api_version":"unstable","storefront_access_token":"12a35b67c890defg123h456i7f89j01k"},"dataPropertyOrder":{"&":["base_url","api_version","storefront_access_token"]},"color":null,"isPrivate":false,"metaSortKey":1622496642560,"_type":"environment"},{"_id":"wrk_1_fld_0_0","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Getting started","description":"","_type":"request_group","metaSortKey":0,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_0_fld_1_0","parentId":"wrk_1_fld_0_0","modified":1672953200,"created":1672953200,"name":"Introduction","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# This learning kit provides a set of common GraphQL queries and mutations used with the Shopify Storefront API.\\n\\n# If not already familiar with GraphQL, or Shopify APIs, please consult the Shopify GraphQL learning kit  https://shopifypartnerblog.myshopify.com/blogs/blog/shopify-graphql-learning-kit\\n\\n# The Shopify Storefront API gives you full creative control to customize your customers' buying experience.\\n\\n# With the Storefront API you can access several Shopify resource types with the following access scopes:\\n# - Read products, variants, and collections.\\n# - Read and modify customer details.\\n# - Read and modify checkouts.\\n# - Read store content like articles, blogs and comments.\\n# - Read subscription selling plans.\\n# - Read and modify cart objects.\\n\\n# Unlike the Admin API, the Storefront API is an unauthenticated API.\\n# Any data exposed by the Storefront API can be seen by any visitor to the store.\\n# Only use the Storefront API when you're comfortable with that risk and the data that is being exposed.\\n# Risk can be mitigated by only providing access scopes required.\\n# For a complete list of access scopes consult Shopify documentation at https://shopify.dev/api/usage/access-scopes#unauthenticated-access-scopes\\n\\n# Access to the Storefront API can be granted by a merchant via a public sales channel, or admin custom app.\\n# For simplicity of this tutorial, we'll use an admin custom app to grant access to the Storefront API.\\n# The process to create an admin custom app is documented in the next section titled \\\"Creating a Custom App\\\".\\n\\n# Documentation for accessing the Storefront API via a custom app can be found at https://shopify.dev/api/examples/storefront-api#requirements\\n\\n# The home of Storefront API-related developer documents and tutorials can be found at https://shopify.dev/api/storefront\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_0_fld_1_1","parentId":"wrk_1_fld_0_0","modified":1672953200,"created":1672953200,"name":"Creating a custom app","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To start using the Storefront API we'll need to create a custom app. Before we can create the app, \\n# we'll need to ensure we've enabled custom app development within the Shopify admin.\\n\\n# Enable custom app development\\n# 1. From your Shopify admin, click \\\"Settings\\\" > \\\"Apps and sales channels\\\".\\n# 2. Click \\\"Develop apps\\\".\\n# 3. Click \\\"Allow custom app development\\\".\\n# 4. Read the warning and information provided, and then click \\\"Allow custom app development\\\".\\n\\n# Create and install a custom app\\n# 1. From your Shopify admin, click \\\"Settings\\\" > \\\"Apps and sales channels\\\".\\n# 2. Click \\\"Develop apps\\\".\\n# 3. Click \\\"Create an app\\\".\\n# 4. Fill out the details in the \\\"Create an app\\\" modal and click \\\"Create app\\\".\\n# 5. Click \\\"Configure Storefront API scopes\\\".\\n# 6. Under Configurations, add the Storefront API access scopes you require.\\n# 7. Click \\\"Save\\\".\\n# 8. Under \\\"API credentials\\\", click \\\"Install app\\\".\\n# 9. In the modal window, click \\\"Install app\\\" to get your access token.\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_0_fld_1_2","parentId":"wrk_1_fld_0_0","modified":1672953200,"created":1672953200,"name":"Configure your environment variables","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Environment variables are JSON key-value pairs that allow you to refer to values without having to write them out every time.\\n\\n# For the tutorial, three environment variables will be utilized.\\n\\n# 1. “base_url” will be the Shopify store being connected to.\\n# - If your store is mydevstore.myshopify.com, enter “mydevstore.myshopify.com” here.\\n# 2. “api_version” is the Storefront API version used for the API requests.\\n# - This can be changed to an earlier version or unstable depending on your use case.\\n# 3. \\\"storefront_access_token\\\" used to populate the X-Shopify-Storefront-Access-Token request header\\n# - This is the storefront access token generated from the \\\"Creating a Custom App\\\" section.\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_0_fld_1_3","parentId":"wrk_1_fld_0_0","modified":1672953200,"created":1672953200,"name":"Making your first request","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# You should see at the top of the frame that we're using the \\\"base_url\\\" and \\\"api_version\\\" to build out the address for the endpoint.\\n# You can also click the \\\"Headers\\\" tab at the top to see the \\\"storefront_access_token\\\" being used.\\n# Hovering over environment variables should show you the value that will be substituted into the request.\\n# If you don’t see your values, ensure you have the right environment selected.\\n\\n# Once you've confirmed these three fields are set in your environment, try running the shop query below.\\n# If the Storefront API access token has been configured correctly, you should get your shop’s info returned.\\n\\nquery getShopDetails{\\n  shop {\\n\\t\\t\\tname\\n      primaryDomain{\\n        host\\n        url\\n      }\\n      paymentSettings{\\n        currencyCode\\n        acceptedCardBrands\\n        enabledPresentmentCurrencies\\n      }\\n\\t\\t}\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_1","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Metafields","description":"","_type":"request_group","metaSortKey":1,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_1_fld_1_0","parentId":"wrk_1_fld_0_1","modified":1672953200,"created":1672953200,"name":"Expose metafield to SFAPI","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Metafields allow merchants to store additional information for Shopify resources including:\\n# - Products\\n# - Collections\\n# - Customers\\n# - Blogs\\n# - Pages\\n# - Shop\\n# - Discounts\\n# - Draft Orders\\n# - Locations\\n# - Orders\\n# - Product Images\\n# - Product Variants\\n\\n# For a complete list please consult https://shopify.dev/api/admin-graphql/2022-10/enums/MetafieldOwnerType\\n\\n# Unlike the Admin API, metafields must first be made visible to the Storefront API.\\n# To make metafields visible to the Storefront API use the Shopify Admin API mutation metafieldStorefrontVisibilityCreate.\\n\\n# Ensure you are calling the Admin API https://shopify.dev/api/admin-graphql#endpoints with valid Admin API credentials https://shopify.dev/api/admin-graphql#authentication when exposing metafields to the Storefront API.\\n\\n# For more information on the metafieldStorefrontVisibilityCreate mutation consult the Shopify Admin API doc https://shopify.dev/docs/admin-api/graphql/reference/metafields/metafieldstorefrontvisibilitycreate\\n\\n# For a complete Storefront API metafield reference please consult the metafield tutorial at\\n# https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api#expose-metafields-to-the-storefront-api\\n\\nmutation createMetafieldStorefrontVisibility(\\n\\t$input: MetafieldStorefrontVisibilityInput!\\n) {\\n\\tmetafieldStorefrontVisibilityCreate(input: $input) {\\n\\t\\tmetafieldStorefrontVisibility {\\n\\t\\t\\tid # MetafieldStorefrontVisibility record id\\n\\t\\t\\tkey # Key must be unique within this namespace on this resource\\n\\t\\t\\townerType\\n\\t\\t\\tnamespace\\n\\t\\t\\tupdatedAt\\n\\t\\t}\\n\\t\\tuserErrors {\\n\\t\\t\\tfield\\n\\t\\t\\tmessage\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n\\t\\\"input\\\": {\\n\\t\\t\\\"key\\\": \\\"drying_instructions\\\",\\n\\t\\t\\\"namespace\\\": \\\"garment_care\\\",\\n\\t\\t\\\"ownerType\\\": \\\"COLLECTION\\\"\\n\\t}\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_1_fld_1_1","parentId":"wrk_1_fld_0_1","modified":1672953200,"created":1672953200,"name":"Retrieve metafields","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Once a metafield has been exposed it can be retrieved using the Storefront API. In order to retrieve a single metafield, specify the namespace and key arguments.\\n# To query for a list of metafields pass the identifiers argument again specifying namespace and key\\n# For more information please consult https://shopify.dev/custom-storefronts/products-collections/metafields#step-2-retrieve-metafields\\n\\n# The following example retrieves a specific metafield and a list of metafields that match the supplied namespace and key and collection id.\\n# Ensure that you've added a value to any metafields you wish to query back by updating it using Admin API https://shopify.dev/apps/metafields/manage-metafields#step-3-update-a-metafield\\n\\nquery getCollectionMetaField(\\n\\t$id: ID!\\n\\t$namespace: String!\\n\\t$key: String!\\n\\t$another_namespace: String!\\n\\t$another_key: String!\\n) {\\n\\tcollection(id: $id) {\\n\\t\\tmetafield(namespace: $namespace, key: $key) {\\n\\t\\t\\tkey\\n\\t\\t\\tnamespace\\n\\t\\t\\tvalue\\n\\t\\t\\tid # metafield id\\n\\t\\t}\\n\\t}\\n\\n\\tcollection(id: $id) {\\n\\t\\tmetafields(\\n\\t\\t\\tidentifiers: [\\n\\t\\t\\t\\t{ namespace: $namespace, key: $key },\\n\\t\\t\\t\\t{ namespace: $another_namespace, key: $another_key }\\n\\t\\t\\t]\\n\\t\\t) {\\n\\t\\t\\tkey\\n\\t\\t\\tnamespace\\n\\t\\t\\tvalue\\n\\t\\t\\tid # metafield id\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n\\t\\\"id\\\": \\\"gid://shopify/Collection/288378781858\\\",\\n\\t\\\"namespace\\\": \\\"garment_care\\\",\\n\\t\\\"key\\\": \\\"wash_temperature\\\",\\n\\t\\\"another_namespace\\\": \\\"bakery\\\",\\n\\t\\\"another_key\\\": \\\"ingredients-new\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_1_fld_1_2","parentId":"wrk_1_fld_0_1","modified":1672953200,"created":1672953200,"name":"Retrieve storefront visibilities","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To retrieve a list of MetafieldStorefrontVisibility records use the metafieldStorefrontVisibilities query available on the Admin API and return a list of exposed metafield records.\\n\\n# Ensure you are calling the Admin API https://shopify.dev/api/admin-graphql#endpoints with valid Admin API credentials https://shopify.dev/api/admin-graphql#authentication when retrieving a list of MetafieldStorefrontVisibility records.\\n# For a complete reference please consult https://shopify.dev/api/admin-graphql/2022-10/queries/metafieldStorefrontVisibilities#top\\n\\nquery getMetafieldStorefrontVisibilities($first: Int!, $namespace: String!) {\\n\\tmetafieldStorefrontVisibilities(first: $first, namespace: $namespace) {\\n\\t\\tedges {\\n\\t\\t\\tnode {\\n\\t\\t\\t\\tid # Metafield visibility record id\\n\\t\\t\\t\\tnamespace\\n\\t\\t\\t\\tkey\\n\\t\\t\\t\\tcreatedAt\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n    \\\"first\\\": 5,\\n    \\\"namespace\\\": \\\"garment_care\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_1_fld_1_3","parentId":"wrk_1_fld_0_1","modified":1672953200,"created":1672953200,"name":"Delete storefront visibilities","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# If you no longer need to access a metafield with the Storefront API, you can hide it again by using the GraphQL Admin API to delete the MetafieldStorefrontVisibility record that you created.\\n# The  metafieldStorefrontVisibilityDelete mutation requires the visibility record of the metafield you wish to hide from the Storefront API.\\n# The metafield will no longer be accessible through the Storefront API.\\n\\n# Ensure you are calling the Admin API https://shopify.dev/api/admin-graphql#endpoints with valid Admin API credentials https://shopify.dev/api/admin-graphql#authentication when deleting a MetafieldStorefrontVisibility record.\\n# For a complete reference please consult https://shopify.dev/api/admin-graphql/2022-10/mutations/metafieldStorefrontVisibilityDelete\\n\\nmutation deleteMetafieldStorefrontVisibilities($id: ID!) {\\n\\tmetafieldStorefrontVisibilityDelete(id: $id) {\\n\\t\\tdeletedMetafieldStorefrontVisibilityId # The visibility record of the metafield hidden from Storefront API\\n\\n\\t\\tuserErrors {\\n\\t\\t\\tfield\\n\\t\\t\\tmessage\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n\\t\\\"id\\\": \\\"gid://shopify/MetafieldStorefrontVisibility/1684242594\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_2","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"International pricing","description":"","_type":"request_group","metaSortKey":2,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_2_fld_1_0","parentId":"wrk_1_fld_0_2","modified":1672953200,"created":1672953200,"name":"Get available countries and currencies","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To present pricing in local currency enable the market of the passed in country context within Markets.\\n# If the country is not enabled in Markets the currency of the active localized experience will be the store's default currency.\\n\\n# To present a localized language experience enable it from Markets.\\n# If an alternate language is not enabled for the passed in country context, the active language will be the store's default.\\n\\nquery getCountriesAndCurrencies($country: CountryCode) @inContext(country: $country) {\\n  localization {\\n\\t\\tlanguage{ #The language of the active localized experience.\\n\\t\\t\\tisoCode\\n\\t\\t\\tname\\n\\t\\t}\\n    availableCountries {\\n      currency {\\n        isoCode\\n        name\\n        symbol\\n      }\\n      isoCode\\n      name\\n      unitSystem\\n    }\\n    country { #The currency of the active localized experience.\\n      currency {\\n        isoCode\\n        name\\n        symbol\\n      }\\n      isoCode\\n      name\\n      unitSystem\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n\\t\\\"country\\\": \\\"FR\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_2_fld_1_1","parentId":"wrk_1_fld_0_2","modified":1672953200,"created":1672953200,"name":"Get product prices","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query allProducts($country: CountryCode) @inContext(country: $country) {\\n  products(first: 1) {\\n    edges {\\n      node {\\n\\t\\t\\t\\ttitle\\n        variants(first:1) {\\n          edges {\\n            node {\\n\\t\\t\\t\\t\\t\\t\\ttitle\\n              price {\\n                amount\\n                currencyCode #active local currency\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n\\t\\\"country\\\": \\\"CA\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_2_fld_1_2","parentId":"wrk_1_fld_0_2","modified":1672953200,"created":1672953200,"name":"Get price ranges for products","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query getProductPriceRanges($country: CountryCode) @inContext(country: $country) {\\n  products(first: 1) {\\n    edges {\\n      node {\\n        title\\n        priceRange {\\n          minVariantPrice {\\n            amount\\n            currencyCode  #active local currency\\n          }\\n          maxVariantPrice {\\n            amount\\n            currencyCode\\n          }\\n        }\\n        compareAtPriceRange {\\n          minVariantPrice {\\n            amount\\n            currencyCode  #active local currency\\n          }\\n          maxVariantPrice {\\n            amount\\n            currencyCode\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n\\t\\\"country\\\": \\\"CA\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_2_fld_1_3","parentId":"wrk_1_fld_0_2","modified":1672953200,"created":1672953200,"name":"Get customer orders","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query getcustomerOrders($customerAccessToken: String!, $country: CountryCode)@inContext(country: $country) {\\n  customer(customerAccessToken: $customerAccessToken) {\\n    orders(first:10) {\\n      edges {\\n        node {\\n          totalPrice {\\n            amount\\n            currencyCode # store's currency\\n          }\\n          lineItems(first:10) {\\n            edges {\\n              node {\\n                originalTotalPrice {\\n                  amount\\n                  currencyCode # store's currency\\n                }\\n                variant {\\n                  price {\\n                    amount\\n                    currencyCode # active local currency\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n\\t\\\"customerAccessToken\\\": \\\"customerAccessToken\\\",\\n\\t\\\"country\\\": \\\"FR\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_2_fld_1_4","parentId":"wrk_1_fld_0_2","modified":1672953200,"created":1672953200,"name":"Create cart in local context","description":"","_type":"request","metaSortKey":4,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Generates a cart in the currency and language of the context passed in.\\n# Requires that the country passed be enabled in Markets and that the language passed in is enabled for that market.\\n\\nmutation cartCreate($cartInput: CartInput!, $country: CountryCode, $language: LanguageCode)@inContext(country: $country, language: $language){\\n\\tcartCreate(input: $cartInput) {\\n\\t\\tuserErrors {\\n\\t\\t\\tcode\\n\\t\\t\\tmessage\\n\\t\\t}\\n\\t\\tcart {\\n\\t\\t\\tid\\n\\t\\t\\tcheckoutUrl #URL for cart in local currency and language passed in\\n\\t\\t\\tlines(first: 50) {\\n\\t\\t\\t\\tedges {\\n\\t\\t\\t\\t\\tnode {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\tmerchandise {\\n\\t\\t\\t\\t\\t\\t\\t... on ProductVariant {\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\t\\tproduct {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\t\\tquantityAvailable\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tcost {\\n\\t\\t\\t\\tsubtotalAmount {\\n\\t\\t\\t\\t\\tamount #active local currency\\n\\t\\t\\t\\t\\tcurrencyCode\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ttotalAmount {\\n\\t\\t\\t\\t\\tamount #active local currency\\n\\t\\t\\t\\t\\tcurrencyCode\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n\\t\\\"cartInput\\\": {\\n\\t\\t\\\"lines\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"quantity\\\": 3,\\n\\t\\t\\t\\t\\\"merchandiseId\\\": \\\"gid://shopify/ProductVariant/42485059584162\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"quantity\\\": 1,\\n\\t\\t\\t\\t\\\"merchandiseId\\\": \\\"gid://shopify/ProductVariant/42790980223138\\\"\\n\\t\\t\\t}\\n\\t\\t]\\n\\n\\t},\\n\\t\\\"country\\\": \\\"US\\\",\\n\\t\\\"language\\\": \\\"ES\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_3","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Local pickup","description":"","_type":"request_group","metaSortKey":3,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_3_fld_1_0","parentId":"wrk_1_fld_0_3","modified":1672953200,"created":1672953200,"name":"Get pickup availability for variants","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query GetPickUpAvailability {\\n  product(first: 1) {\\n    edges {\\n      node {\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              storeAvailability(first: 1) {\\n                edges {\\n                  node {\\n                    available\\n                    pickUpTime\\n                    location {\\n                      name\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_3_fld_1_1","parentId":"wrk_1_fld_0_3","modified":1672953200,"created":1672953200,"name":"Get in-store pickup locations","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query LocationsByDistance($location: GeoCoordinateInput!) {\\n  locations(near:$location, first: 5, sortKey: DISTANCE) {\\n    edges {\\n      node {\\n        id\\n        name\\n        address {\\n          formatted\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"location\\\": {\\n    \\\"latitude\\\": 45.4553,\\n    \\\"longitude\\\": -75.6973\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_3_fld_1_2","parentId":"wrk_1_fld_0_3","modified":1672953200,"created":1672953200,"name":"Get closest pickup location","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query NearestPickupAvailability @inContext(preferredLocationId: \\\"Z2lkOi8vc2hvcGlmeS9Mb2NhdGlvbi8x\\\") {\\n  node(id: \\\"Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8z\\\") {\\n    ... on ProductVariant {\\n      storeAvailability(first: 3) {\\n        edges {\\n          node {\\n            location {\\n              name\\n              address {\\n                formatted\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Collections","description":"","_type":"request_group","metaSortKey":4,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_4_fld_1_0","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get collections","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Simple query to return the first 10 collections in the shop.\\n\\n# Since a shop can contain multiple collections, pagination is required.\\n\\n{\\n  collections(first: 10) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        handle\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_1","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get collection by handle","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Simple query to return details from a collection object by passing the collection.handle as an argument.\\n\\nquery getCollectionByHandle($handle: String!) {\\n  collection(handle: $handle) {\\n    id\\n    title\\n    description\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"handle\\\": \\\"all\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_2","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get collection by id","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Query that returns details from a collection object by passing the collection.id as an argument.\\n\\nquery getCollectionById($id: ID!) {\\n\\tcollection(id: $id) {\\n\\t\\ttitle\\n\\t\\tdescription\\n                handle\\n\\t}\\n}\\n\",\"variables\":\"{\\n  \\\"id\\\": \\\"gid://shopify/Collection/1\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_3","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Display products in collection","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n# This query returns data from a single collection, specified by the handle.\\n\\n# The data returned in the product connection can be used to display a page of products.\\n\\n# The `products` connection requires pagination in this query, since collections can contain a large number of products.\\n# This query includes the `sortKey` argument on the products connection, this returns products in the order specified by the sortKey\\n\\n# Products can contain multiple images, so the `images` connection requires pagination.\\n# In this example we only want to display 1 image per product, so we're only asking for first:1\\n\\n# Since products can contain multiple variants, we've asked the products connection to return price ranges.\\n\\n# The 'priceRange' object returns prices in the shop's currency. International Pricing of products in collections will be demonstrated in the next example.\\n\\nquery getProductsInCollection($handle: String!) {\\n\\tcollection(handle: $handle) {\\n\\t\\tid\\n\\t\\ttitle\\n\\t\\tproducts(first: 50, sortKey: BEST_SELLING) {\\n\\t\\t\\tedges {\\n\\t\\t\\t\\tnode {\\n\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\tvendor\\n\\t\\t\\t\\t\\tavailableForSale\\n\\t\\t\\t\\t\\timages(first: 1) {\\n\\t\\t\\t\\t\\t\\tedges {\\n\\t\\t\\t\\t\\t\\t\\tnode {\\n\\t\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\t\\turl\\n\\t\\t\\t\\t\\t\\t\\t\\twidth\\n\\t\\t\\t\\t\\t\\t\\t\\theight\\n\\t\\t\\t\\t\\t\\t\\t\\taltText\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tpriceRange {\\n\\t\\t\\t\\t\\t\\tminVariantPrice {\\n\\t\\t\\t\\t\\t\\t\\tamount\\n\\t\\t\\t\\t\\t\\t\\tcurrencyCode\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tmaxVariantPrice {\\n\\t\\t\\t\\t\\t\\t\\tamount\\n\\t\\t\\t\\t\\t\\t\\tcurrencyCode\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":\"{\\n  \\\"handle\\\": \\\"all\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_4","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Display multicurrency products in collection","description":"","_type":"request","metaSortKey":4,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# This query is returning data from a single collection, specified by the handle.\\n\\n# The data being returned in the product connection can be used to display a page of products with multicurrency pricing.\\n\\n# Since products can contain multiple variants, we've asked the products connection to return price ranges.\\n\\n# The 'presentmentPriceRanges' object returns prices in all currencies offered by the shop.\\n# Since shops can offer multiple different currencies, the `presentmentPriceRanges` object requires pagination\\n\\n\\n{\\n  collectionByHandle(handle: \\\"all\\\") {\\n    id\\n    title\\n    products(first: 50, sortKey: BEST_SELLING) {\\n      edges {\\n        node {\\n          id\\n          title\\n          vendor\\n          availableForSale\\n          images(first: 1) {\\n            edges {\\n              node {\\n                id\\n                transformedSrc\\n                width\\n                height\\n                altText\\n              }\\n            }\\n          }\\n          presentmentPriceRanges(first: 10) {\\n            edges {\\n              node {\\n                minVariantPrice {\\n                  amount\\n                  currencyCode\\n                }\\n                maxVariantPrice {\\n                  amount\\n                  currencyCode\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_5","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get all metafields in namespace from collection","description":"","_type":"request","metaSortKey":5,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n\\n# Uses the `collectionByHandle` query to specify a collection by passing the handle.\\n# The `metafields` connection is using the `namespace` argument to return only metafields in a specific namespace.\\n\\n# Since collections can have a large number of metafields in a given namespace, pagination is required on the `metafields` connection.\\n\\n\\n\\n{\\n  collectionByHandle (handle:\\\"all\\\") {\\n    id\\n    metafields (first:10 namespace:\\\"global\\\") {\\n      edges {\\n        node {\\n          namespace\\n          key\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_6","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get specific metafield from collection","description":"","_type":"request","metaSortKey":6,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n\\n# Uses the `collectionByHandle` query to specify a collection by passing the handle.\\n\\n# The `metafield` connection is using the `namespace` and 'key' arguments to return a specific metafield.\\n\\n# Since only 1 metafield can exist in a given namespace with a given key, pagination is not required on the `metafield` connection.\\n\\n{\\n  collectionByHandle(handle: \\\"all\\\") {\\n    id\\n    metafield(namespace: \\\"global\\\", key: \\\"instructions\\\") {\\n      namespace\\n      key\\n      value\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_4_fld_1_7","parentId":"wrk_1_fld_0_4","modified":1672953200,"created":1672953200,"name":"Get all metafields from collection","description":"","_type":"request","metaSortKey":7,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n\\n# Uses the `collectionByHandle` query to specify a collection by passing the handle, and returns a list of all metafields attached to that collection.\\n# Since collections can have a large number of metafields, pagination is required on the `metafields` connection.\\n\\n\\n{\\n  collectionByHandle (handle:\\\"all\\\") {\\n    id\\n    metafields (first:10) {\\n      edges {\\n        node {\\n          namespace\\n          key\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_5","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Products","description":"","_type":"request_group","metaSortKey":5,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_5_fld_1_0","parentId":"wrk_1_fld_0_5","modified":1672953200,"created":1672953200,"name":"Get 3 products and 3 variants","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n# This query gets the products connection, which is available from the QueryRoot, and asks for the first 3 products.\\n# It selects edges, the node, and fields from each of the returned product objects.\\n# Since products also have a variants connection, we repeat a similar process to get information on the first 3 variants on each of those products.\\n\\n\\n{\\n  products(first: 3) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        title\\n        description\\n        handle\\n        variants(first: 3) {\\n          edges {\\n            cursor\\n            node {\\n              id\\n              title\\n              quantityAvailable\\n              priceV2 {\\n                amount\\n                currencyCode\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_5_fld_1_1","parentId":"wrk_1_fld_0_5","modified":1672953200,"created":1672953200,"name":"Get product by handle","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n# This query gets a single product connection, available from the QueryRoot, that matches the handle \\\"my-test-product\\\".\\n# As only one product connection will be returned, we don't need to specify edges, node, or cursor.\\n\\n{\\n  productByHandle(handle: \\\"my-test-product\\\") {\\n    id\\n    title\\n    description\\n    variants(first: 3) {\\n      edges {\\n        cursor\\n        node {\\n          id\\n          title\\n          quantityAvailable\\n          priceV2 {\\n            amount\\n            currencyCode\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_5_fld_1_2","parentId":"wrk_1_fld_0_5","modified":1672953200,"created":1672953200,"name":"Get product recommendations","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n# This query gets a single product connection, available from the QueryRoot, that matches the base64-encoded id of the product.\\n# As only one product connection will be returned, we don't need to specify edges, node, or cursor.\\n\\n{\\n  productRecommendations(productId: \\\"Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0LzEyMzQ1Njc4OQ==\\\") {\\n    id\\n    title\\n    description\\n    variants(first: 3) {\\n      edges {\\n        cursor\\n        node {\\n          id\\n          title\\n          quantityAvailable\\n          priceV2 {\\n            amount\\n            currencyCode\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_5_fld_1_3","parentId":"wrk_1_fld_0_5","modified":1672953200,"created":1672953200,"name":"Get product selling plans","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# This query gets the first 30 products, the first 5 selling plan groups associated with them, and the first 5 selling plans within the groups.\\n# We use fragments to return the price adjustments for each selling plan.\\n\\n{\\n  products(first: 30) {\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n    }\\n    edges {\\n      cursor\\n      node {\\n        id\\n        title\\n        sellingPlanGroups(first: 5) {\\n          pageInfo {\\n            hasNextPage\\n            hasPreviousPage\\n          }\\n          edges {\\n            cursor\\n            node {\\n              appName\\n              name\\n              options {\\n                name\\n                values\\n              }\\n              sellingPlans(first: 5) {\\n                pageInfo {\\n                  hasNextPage\\n                  hasPreviousPage\\n                }\\n                edges {\\n                  cursor\\n                  node {\\n                    id\\n                    description\\n                    recurringDeliveries\\n                    priceAdjustments {\\n                      adjustmentValue {\\n                        ... on SellingPlanPercentagePriceAdjustment {\\n                          adjustmentPercentage\\n                        }\\n                        ... on SellingPlanFixedAmountPriceAdjustment {\\n                          adjustmentAmount {\\n                            amount\\n                            currencyCode\\n                          }\\n                        }\\n                        ... on SellingPlanFixedPriceAdjustment {\\n                          price {\\n                            amount\\n                            currencyCode\\n                          }\\n                        }\\n                      }\\n                      orderCount\\n                    }\\n                    options {\\n                      name\\n                      value\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_5_fld_1_4","parentId":"wrk_1_fld_0_5","modified":1672953200,"created":1672953200,"name":"Get product media","description":"","_type":"request","metaSortKey":4,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\n# This query gets 3 products and their media; we use a fragment here to specify the fields that we want to return for each possible media type.\\n# You cannot retrieve media for product variants with the Storefront API, only products. You cannot upload media, add media to a product, or delete media with the Storefront API, use the Admin API for these tasks.\\n# https://shopify.dev/tutorials/manage-product-media-with-admin-api#retrieve-product-media-by-using-the-storefront-api\\n\\n{\\n  products(first: 3) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        title\\n        description\\n        media(first: 10) {\\n        edges {\\n          node {\\n            mediaContentType\\n            alt\\n            ...mediaFieldsByType\\n          }\\n        }\\n      }\\n      }\\n    }\\n  }\\n}\\n\\nfragment mediaFieldsByType on Media {\\n  ...on ExternalVideo {\\n    id\\n    host\\n    embeddedUrl\\n  }\\n  ...on MediaImage {\\n    image {\\n      originalSrc\\n    }\\n  }\\n  ...on Model3d {\\n    sources {\\n      url\\n      mimeType\\n      format\\n      filesize\\n    }\\n  }\\n  ...on Video {\\n    sources {\\n      url\\n      mimeType\\n      format\\n      height\\n      width\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Customers","description":"","_type":"request_group","metaSortKey":6,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_6_fld_1_0","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Create an access token","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# The Storefront API allows access to a customer’s addresses, orders and metafields. To access customers, an app must have unauthenticated_read_customers access scope.\\n\\n# To query a customer, a customerAccessToken is required. This is obtained via the customerAccessTokenCreate mutation which exchanges a user’s email address and password for an access token.\\n\\nmutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\\n  customerAccessTokenCreate(input: $input) {\\n    customerAccessToken {\\n      accessToken\\n      expiresAt\\n    }\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"input\\\": {\\n    \\\"email\\\": \\\"user@example.com\\\",\\n    \\\"password\\\": \\\"HiZqFuDvDdQ7\\\"\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_1","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Get customer orders","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To query a customer, a customerAccessToken is required. This is obtained via the customerAccessTokenCreate mutation which exchanges a user’s email address and password for an access token.\\n\\nquery getCustomerOrders($customerAccessToken: String!){\\n  customer(customerAccessToken: $customerAccessToken) {\\n    id\\n    orders(first:3) {\\n      edges {\\n        node {\\n          orderNumber\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\",\"variables\":\"{\\n  \\\"customerAccessToken\\\": \\\"d794063da4e26c9b1a8d7b77bdfd6862\\\"\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_2","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Get customer metafields","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To query a customer, a customerAccessToken is required. This is obtained via the customerAccessTokenCreate mutation which exchanges a user’s email address and password for an access token.\\n\\n# By default, the Storefront API can't read metafields. To expose specific metafields to the Storefront API, you need to use the GraphQL Admin API to allow them. For each metafield that you want to allow, you need to create a MetafieldStorefrontVisibility record.\\n\\n# https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api#expose-metafields-to-the-storefront-api\\n\\nquery CustomerMetafields($customerAccessToken: String!){\\n  customer(customerAccessToken: $customerAccessToken) {\\n    id\\n    email\\n    metafields (first:3) {\\n      edges {\\n        node {\\n          id\\n          key\\n          namespace\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\",\"variables\":\"{\\n  \\\"customerAccessToken\\\": \\\"d794063da4e26c9b1a8d7b77bdfd6862\\\"\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_3","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Update customer","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# To query a customer, a customerAccessToken is required. This is obtained via the customerAccessTokenCreate mutation which exchanges a user’s email address and password for an access token.\\n\\nmutation customerUpdate($customerAccessToken: String!, $customer: CustomerUpdateInput!) {\\n  customerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\\n    customer {\\n      id\\n    }\\n    customerAccessToken {\\n      accessToken\\n      expiresAt\\n    }\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\\n\",\"variables\":\"{\\n  \\\"customerAccessToken\\\": \\\"d794063da4e26c9b1a8d7b77bdfd6862\\\",\\n  \\\"customer\\\": {\\n    \\\"phone\\\": \\\"+61401425227\\\"\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_4","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Create customer","description":"","_type":"request","metaSortKey":4,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation customerCreate($input: CustomerCreateInput!) {\\n  customerCreate(input: $input) {\\n    customer {\\n      id\\n      email\\n      firstName\\n      lastName\\n      phone\\n    }\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n    \\\"input\\\": {\\n      \\\"acceptsMarketing\\\": true,\\n      \\\"email\\\": \\\"example@example.com\\\",\\n      \\\"firstName\\\": \\\"John\\\",\\n      \\\"lastName\\\": \\\"Smith\\\",\\n      \\\"password\\\": \\\"qwerty12345\\\",\\n      \\\"phone\\\": \\\"1234567890\\\"\\n    }\\n  }\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_5","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Activate customer","description":"","_type":"request","metaSortKey":5,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\nmutation customerActivate($id: ID!, $input: CustomerActivateInput!) {\\n  customerActivate(id: $id, input: $input) {\\n    customer {\\n      id\\n      email\\n      firstName\\n      lastName\\n      phone\\n    }\\n    customerAccessToken {\\n      accessToken\\n      expiresAt\\n    }\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\\n\",\"variables\":\"{\\n\\t\\\"id\\\": \\\"gid://shopify/Customer/5820694691862\\\",\\n\\t\\\"input\\\": {\\n\\t\\t\\\"activationToken\\\": \\\"da48cbd301e7c31a9d5dca03fcf5cdb6-1671054502\\\",\\n\\t\\t\\\"password\\\": \\\"qwerty12345\\\"\\n\\t}\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_6","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Recover customer","description":"","_type":"request","metaSortKey":6,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"\\nmutation customerRecover($email: String!) {\\n  customerRecover(email: $email) {\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\\n\\n\",\"variables\":\"{\\n\\t\\\"email\\\":\\\"example@example.com\\\"\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_6_fld_1_7","parentId":"wrk_1_fld_0_6","modified":1672953200,"created":1672953200,"name":"Reset customer","description":"","_type":"request","metaSortKey":7,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation customerReset($id: ID!, $input: CustomerResetInput!) {\\n  customerReset(id: $id, input: $input) {\\n    customer {\\n      id\\n      email\\n      firstName\\n      lastName\\n      phone\\n    }\\n    customerAccessToken {\\n      accessToken\\n      expiresAt\\n    }\\n    customerUserErrors {\\n      code\\n      field\\n      message\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n\\t\\\"id\\\": \\\"gid://shopify/Customer/5820694691862\\\",\\n\\t\\\"input\\\": {\\n\\t\\t\\\"password\\\": \\\"12345qwerty\\\",\\n\\t\\t\\\"resetToken\\\": \\\"2279f05aebbb8319553e46f2b71c88c7-1671131136\\\"\\n\\t}\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_7","parentId":"wrk_1","modified":1672953200,"created":1672953200,"name":"Manage a cart","description":"","_type":"request_group","metaSortKey":7,"resourceenvironment":{},"environmentPropertyOrder":null},{"_id":"wrk_1_fld_0_7_fld_1_0","parentId":"wrk_1_fld_0_7","modified":1672953200,"created":1672953200,"name":"Create a cart with one line item","description":"","_type":"request","metaSortKey":0,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation createCart($cartInput: CartInput) {\\n  cartCreate(input: $cartInput) {\\n    cart {\\n      id\\n      createdAt\\n      updatedAt\\n      lines(first: 10) {\\n        edges {\\n          node {\\n            id\\n            merchandise {\\n              ... on ProductVariant {\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n      attributes {\\n        key\\n        value\\n      }\\n      estimatedCost {\\n        totalAmount {\\n          amount\\n          currencyCode\\n        }\\n        subtotalAmount {\\n          amount\\n          currencyCode\\n        }\\n        totalTaxAmount {\\n          amount\\n          currencyCode\\n        }\\n        totalDutyAmount {\\n          amount\\n          currencyCode\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"cartInput\\\": {\\n    \\\"lines\\\": [\\n      {\\n        \\\"quantity\\\": 1,\\n        \\\"merchandiseId\\\": \\\"Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8zOTg1Mzk2NzM0MzY3Mg==\\\"\\n\\t\\t  }\\n\\t\\t],\\n\\t\\t\\\"attributes\\\": {\\n\\t\\t  \\\"key\\\": \\\"cart_attribute_key\\\",\\n\\t\\t  \\\"value\\\": \\\"This is a cart attribute value\\\"\\n    }\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_7_fld_1_1","parentId":"wrk_1_fld_0_7","modified":1672953200,"created":1672953200,"name":"Query a cart","description":"","_type":"request","metaSortKey":1,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query cartQuery($cartId: ID!) {\\n  cart(id: $cartId) {\\n    id\\n    createdAt\\n    updatedAt\\n\\n    lines(first: 10) {\\n      edges {\\n        node {\\n          id\\n          quantity\\n          merchandise {\\n            ... on ProductVariant {\\n              id\\n            }\\n          }\\n          attributes {\\n            key\\n            value\\n          }\\n        }\\n      }\\n    }\\n    attributes {\\n      key\\n      value\\n    }\\n    estimatedCost {\\n      totalAmount {\\n        amount\\n        currencyCode\\n      }\\n      subtotalAmount {\\n        amount\\n        currencyCode\\n      }\\n      totalTaxAmount {\\n        amount\\n        currencyCode\\n      }\\n      totalDutyAmount {\\n        amount\\n        currencyCode\\n      }\\n    }\\n    buyerIdentity {\\n      email\\n      phone\\n      customer {\\n        id\\n      }\\n      countryCode\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"cartId\\\": \\\"Z2lkOi8vc2hvcGlmeS9DYXJ0L2QzNTNhODQxYjQ1Y2VmYjY3ZTQ1NjdiZGUzMzU4MjFh\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_7_fld_1_2","parentId":"wrk_1_fld_0_7","modified":1672953200,"created":1672953200,"name":"Update line items","description":"","_type":"request","metaSortKey":2,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation cartLinesUpdate($cartId: ID!, $lines: [CartLineUpdateInput!]!) {\\n  cartLinesUpdate(cartId: $cartId, lines: $lines) {\\n    cart {\\n      id\\n      lines(first: 10) {\\n        edges {\\n          node {\\n            id\\n            quantity\\n            merchandise {\\n              ... on ProductVariant {\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n      estimatedCost {\\n        totalAmount {\\n          amount\\n          currencyCode\\n        }\\n        subtotalAmount {\\n          amount\\n          currencyCode\\n        }\\n        totalTaxAmount {\\n          amount\\n          currencyCode\\n        }\\n        totalDutyAmount {\\n          amount\\n          currencyCode\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"cartId\\\": \\\"Z2lkOi8vc2hvcGlmeS9DYXJ0L2QzNTNhODQxYjQ1Y2VmYjY3ZTQ1NjdiZGUzMzU4MjFh\\\",\\n  \\\"lines\\\": {\\n    \\\"id\\\": \\\"Z2lkOi8vc2hvcGlmeS9DYXJ0TGluZS9mZjJjZjBmYjM1YjIxZTkzN2IxMGE3ZGE4YjQyMDI0ND9jYXJ0PWU0YzhkYzQ2MTRlYWEyNjgyMTE0NDIxMmY0NzNkMmYy\\\",\\n    \\\"quantity\\\": 3\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_7_fld_1_3","parentId":"wrk_1_fld_0_7","modified":1672953200,"created":1672953200,"name":"Update buyer identity","description":"","_type":"request","metaSortKey":3,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation cartBuyerIdentityUpdate($cartId: ID!, $buyerIdentityInput: CartBuyerIdentityInput!) {\\n  cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentityInput) {\\n    cart {\\n      id\\n      buyerIdentity {\\n        email\\n        phone\\n        countryCode\\n      }\\n    }\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"cartId\\\": \\\"Z2lkOi8vc2hvcGlmeS9DYXJ0L2QzNTNhODQxYjQ1Y2VmYjY3ZTQ1NjdiZGUzMzU4MjFh\\\",\\n  \\\"buyerIdentityInput\\\": {\\n    \\\"email\\\": \\\"example-email@shopify.com\\\"\\n  }\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"},{"_id":"wrk_1_fld_0_7_fld_1_4","parentId":"wrk_1_fld_0_7","modified":1672953200,"created":1672953200,"name":"Retrieve a checkout","description":"","_type":"request","metaSortKey":4,"url":"https://{{ _.base_url }}/api/{{ _.api_version }}/graphql.json","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query checkoutURL($cartId: ID!) {\\n  cart(id: $cartId) {\\n    checkoutUrl\\n  }\\n}\\n\",\"variables\":\"{\\n  \\\"cartId\\\": \\\"Z2lkOi8vc2hvcGlmeS9DYXJ0L2QzNTNhODQxYjQ1Y2VmYjY3ZTQ1NjdiZGUzMzU4MjFh\\\"\\n}\\n\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_1"},{"name":"X-Shopify-Storefront-Access-Token","value":"{{ _.storefront_access_token }}","description":"","id":"pair_2"}],"authentication":{},"isPrivate":false,"settingStoreCookies":false,"settingSendCookies":false,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global"}]}